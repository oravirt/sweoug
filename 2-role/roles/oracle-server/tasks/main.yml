---
# tasks file for oracle-server
- name: Create directories
  file: path={{ item }} state=directory owner={{ oracle_user.name }} group={{ oracle_user.primgroup }} mode=775
  with_items:
      - "{{ oracle_home }}"
      - "{{ oracle_stage_directory }}"
      - "{{ oracle_stage_directory }}/{{ oracle_db.version }}"
  tags: directories

- name: Extract files to stage-area
  unarchive: src={{ item.path }}/{{ item.name }}  dest={{ oracle_stage_directory }}/{{ oracle_db.version }} copy=no
  args:
      creates: "{{ oracle_stage_directory }}/{{ oracle_db.version }}/database/install/.oui"
  with_items:
    - "{{oracle_binaries}}"
  become: true
  become_user: "{{ oracle_user.name }}"
  tags: unpacksw

- name: Setup response file for Oracle Database Server installation
  template: src=db-install.rsp.j2 dest={{ oracle_stage_directory }}/{{ oracle_db.version }}-server.rsp
  become: true
  become_user: "{{ oracle_user.name }}"
  tags: responsefile_swdb, oraswdb_install
  register: swreponsefile


- name: Install Oracle Database Server
  shell: "{{ oracle_stage_directory }}/{{ oracle_db.version }}/database/runInstaller -responseFile {{ oracle_stage_directory }}/{{ oracle_db.version }}-server.rsp -ignorePrereq -ignoreSysPrereqs -silent -waitforcompletion"
  args:
      creates: "{{ oracle_home }}/root.sh"
  become: true
  become_user: "{{ oracle_user.name }}"
  tags: oraswdb_install
  register: oradbinstall

- name: Print output from Oracle Server installation
  debug: var=oradbinstall.stdout_lines
  when: oradbinstall.changed

- name: Run oraInst.sh
  shell: "{{ oracle_inventory_loc }}/orainstRoot.sh"
  when: oradbinstall is defined and oradbinstall.changed
  tags: oraswdb_install,orainstsh

- name: Run root.sh
  shell: "{{ oracle_home }}/root.sh"
  when: oradbinstall.changed
  tags: oraswdb_install,rootsh

- name: Add .profile for Oracle installation
  template: src=dotprofile.j2 dest=/home/{{ oracle_user.name }}/.profile_{{ oracle_db.name }}
  become: true
  become_user: "{{ oracle_user.name }}"
  tags: dotprofile

- name: Customize glogin.sql
  lineinfile: dest="{{ oracle_home }}/sqlplus/admin/glogin.sql" line='set sqlprompt "_user @ _connect_identifier:>"' backup=yes
  become: yes
  become_user: "{{ oracle_user.name }}"
  tags: glogin


- name: Copy cx_Oracle RPM
  copy: src=files/cx_Oracle-5.2.1-12c-py27-1.x86_64.rpm dest={{ oracle_stage_directory }}/
  become: true
  tags: cx_oracle


- name: Install cx_Oracle
  yum: name={{ oracle_stage_directory }}/cx_Oracle-5.2.1-12c-py27-1.x86_64.rpm state=present
  become: true
  environment: "{{ oracle_env }}"
  tags: cx_oracle
