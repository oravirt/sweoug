---
- hosts: all
  gather_facts: true
  become: true
  vars:
     oracle_base: /u01/app/oracle
     oracle_inventory_loc: /u01/app/oraInventory
     oracle_responsefile:

     oracle_home: "{{ oracle_base }}/product/{{ oracle_db.version }}/db"
     oracle_db:
           name: orcl
           passwd: Oracle123
           version: 12.1.0.2
           cdb: True
           total_mb: 1024
           characterset: AL32UTF8
           ncharacterset: AL16UTF16
           datafile_dest: /u01/oradata
           recoveryfile_dest: /u01/fra
           listener_name: LISTENER
           listener_protocols: TCP
           listener_port: 1521

     oracle_env:
            ORACLE_HOME: "{{ oracle_home }}"
            LD_LIBRARY_PATH: "{{ oracle_home }}/lib"

     oracle_stage_directory: /u01/stage
     oracle_binaries:
            - {name: linuxamd64_12102_database_1of2.zip, path: /media/swrepo/ }
            - {name: linuxamd64_12102_database_2of2.zip, path: /media/swrepo/ }

     oracle_groups:
          - dba
          - oinstall
     oracle_user:
           name: oracle
           primgroup: oinstall
           dbagroup: dba
           othergroups: dba
           passwd: "$6$0xHoAXXF$K75HKb64Hcb/CEcr3YEj2LGERi/U2moJgsCK.ztGxLsKoaXc4UBiNZPL0hlxB5ng6GL.gyipfQOOXplzcdgvD0"
     #
    #  oracle_dba_group: dba
    #  oracle_prim_group: oinstall

    #  oracle_user:         # Passwd :Oracle123
    #      - { username: oracle, primgroup: oinstall, othergroups: dba, passwd: "$6$0xHoAXXF$K75HKb64Hcb/CEcr3YEj2LGERi/U2moJgsCK.ztGxLsKoaXc4UBiNZPL0hlxB5ng6GL.gyipfQOOXplzcdgvD0" }

     os_packages:
         - libselinux-python
         - procps
         - module-init-tools
         - ethtool
         - bc
         - bind-utils
         - nfs-utils
         - xorg-x11-utils
         - xorg-x11-xauth
         - binutils
         - compat-libstdc++-33
         - gcc
         - gcc-c++
         - glibc
         - glibc-devel
         - glibc-devel.i686
         - libaio
         - libaio-devel
         - libgcc
         - libstdc++
         - libstdc++-devel
         - make
         - sysstat
         - openssh-clients
         - compat-libcap1
         - xorg-x11-xauth
         - xorg-x11-xinit
         - libXtst
         - xdpyinfo
         - xterm
         - xsetroot
         - libXp
         - libXt
         - libXtst
         - ntp
         - ksh
         - lvm2
         - xfsprogs
         - btrfs-progs
         - parted
         - nc

     oracle_sysctl:
           - { name: kernel.shmall, value: 4294967296 }
           - { name: kernel.shmmax, value: 68719476736 }
           - { name: kernel.shmmni, value: 4096 }
           - { name: kernel.sem, value: "250 32000 100 128" }
           - { name: fs.file-max, value: 6815744 }
           - { name: fs.aio-max-nr, value: 1048576 }
           - { name: net.ipv4.ip_local_port_range, value: "9000 65500" }
           - { name: net.core.rmem_default, value: 262144 }
           - { name: net.core.rmem_max, value: 4194304 }
           - { name: net.core.wmem_default, value: 262144 }
           - { name: net.core.wmem_max, value: 1048576 }


     oracle_seclimits:
           - { name: 'soft nproc', value: 2047 }
           - { name: 'hard nproc', value: 16384 }
           - { name: 'soft nofile', value: 4096 }
           - { name: 'hard nofile', value: 65536 }
           - { name: 'soft memlock', value: "{{ ((0.9 * ansible_memtotal_mb)*1024)|round|int }}" }
           - { name: 'hard memlock', value: "{{ ((0.9 * ansible_memtotal_mb)*1024)|round|int }}" }

  tasks:

############ Host preparation ###################

    # - name: Check for correct OS family & min version
    #   assert:
    #     that: "ansible_os_family == '{{ os_family_supported }}'"
    #     that: "ansible_distribution_version >= '{{ os_min_supported_version }}'"
    #   tags:
    #    - oscheck

    - name: Install packages
      yum: name={{ item }} state=installed
      with_items: "{{os_packages}}"
      tags: os_packages, oscheck

    - name: Disable firewall
      service: name=firewalld state=stopped enabled=no

    # - name: Disable selinux (permanently)
    #   selinux: state=disabled
    #
    # - name: Disable selinux (runtime)
    #   shell: setenforce 0
    #   ignore_errors: true

    # - name: Check dns for host
    #   command: nslookup {{ ansible_hostname }}
    #   register: ns
    #   ignore_errors: True
    #   tags: etchosts

    - name: Add host to /etc/hosts
      lineinfile: dest=/etc/hosts regexp='.*{{ ansible_fqdn }}$' line="{{ ansible_default_ipv4.address }} {{ ansible_hostname }} {{ ansible_fqdn }}" state=present
      #when: "'find {{ ansible_hostname }}: NXDOMAIN' in ns.stdout or 'find {{ ansible_hostname }}: SERVFAIL' in ns.stdout "
      tags: etchosts

    - name: Add group(s)
      group: name={{ item }} state=present
      with_items:
          - "{{oracle_groups}}"
      tags:
       - group

    - name: Add Oracle user
      user: name={{ oracle_user.name }}  group={{ oracle_user.primgroup }} groups={{ oracle_user.othergroups }} generate_ssh_key=yes append=yes state=present password={{ oracle_user.passwd }}
      #user: name=oracle  group=oinstall groups=dba generate_ssh_key=yes append=yes state=present password="$6$0xHoAXXF$K75HKb64Hcb/CEcr3YEj2LGERi/U2moJgsCK.ztGxLsKoaXc4UBiNZPL0hlxB5ng6GL.gyipfQOOXplzcdgvD0"
      tags:
        - user

    - name: Kernel settings
      sysctl: name={{ item.name }} value="{{ item.value }}" state=present reload=yes
      with_items: "{{oracle_sysctl}}"
      tags: sysctl

    - name: PAM config
      lineinfile: dest=/etc/pam.d/login state=present line="session required pam_limits.so"
      tags: pamconfig

    - name: Security limits
      template: src=templates/oracle-seclimits.conf.j2 dest=/etc/security/limits.d/99-oracle-limits.conf backup=yes
      tags: seclimit

############ Oracle installation ###################

    - name: Create directories
      file: path={{ item }} state=directory owner={{ oracle_user.name }} group={{ oracle_user.primgroup }} mode=775
      with_items:
          - "{{ oracle_home }}"
          - "{{ oracle_stage_directory }}"
          - "{{ oracle_stage_directory }}/{{ oracle_db.version }}"
      tags: directories

    - name: Extract files to stage-area
      unarchive: src={{ item.path }}/{{ item.name }}  dest={{ oracle_stage_directory }}/{{ oracle_db.version }} copy=no
      args:
          creates: "{{ oracle_stage_directory }}/{{ oracle_db.version }}/database/install/.oui"
      with_items:
        - "{{oracle_binaries}}"
      become: true
      become_user: "{{ oracle_user.name }}"
      tags:
          - unpacksw

    - name: Setup response file for Oracle Database Server installation
      template: src=db-install.rsp.j2 dest={{ oracle_stage_directory }}/{{ oracle_db.version }}-server.rsp
      become: true
      become_user: "{{ oracle_user.name }}"
      tags: responsefile_swdb, oraswdb_install
      register: swreponsefile


    - name: Install Oracle Database Server
      shell: "{{ oracle_stage_directory }}/{{ oracle_db.version }}/database/runInstaller -responseFile {{ oracle_stage_directory }}/{{ oracle_db.version }}-server.rsp -ignorePrereq -ignoreSysPrereqs -silent -waitforcompletion"
      args:
          creates: "{{ oracle_home }}/root.sh"
      become: true
      become_user: "{{ oracle_user.name }}"
      tags: oraswdb_install
      register: oradbinstall

    - name: Print output from Oracle Server installation
      debug: var=oradbinstall.stdout_lines
      when: oradbinstall.changed

    - name: Run oraInst.sh
      shell: "{{ oracle_inventory_loc }}/orainstRoot.sh"
      when: oradbinstall.changed
      tags: oraswdb_install,orainstsh

    - name: Run root.sh
      shell: "{{ oracle_home }}/root.sh"
      when: oradbinstall.changed
      tags: oraswdb_install,rootsh

    - name: Add .profile for Oracle installation
      template: src=dotprofile.j2 dest=/home/{{ oracle_user.name }}/.profile_{{ oracle_db.name }}
      become: true
      become_user: "{{ oracle_user.name }}"
      tags: dotprofile

    - name: Customize glogin.sql
      lineinfile: dest="{{ oracle_home }}/sqlplus/admin/glogin.sql" line='set sqlprompt "_user @ _connect_identifier:>"' backup=yes
      become: yes
      become_user: "{{ oracle_user.name }}"
      tags: glogin


############ Create listener & database ###################

    - name: Create responsefile for listener configuration
      template: src=netca.rsp.j2 dest={{ oracle_stage_directory }}/netca.rsp
      become: true
      become_user: "{{ oracle_user.name }}"
      tags: responsefile_netca, listener_install

    - name: Create responsefile for database creation
      template: src=dbca.rsp.j2 dest={{ oracle_stage_directory }}/dbca-{{ oracle_db.name }}.rsp
      become: true
      become_user: "{{ oracle_user.name }}"
      tags: responsefile_db, create_db

    - name: Create listener
      shell: "{{ oracle_home }}/bin/netca -responseFile {{ oracle_stage_directory }}/netca.rsp -silent"
      args:
          creates: "{{ oracle_home }}/network/admin/listener.ora"
      become: true
      become_user: "{{ oracle_user.name }}"
      tags: listener_install

    - name: Create database
      shell: "{{ oracle_home }}/bin/dbca -responseFile {{ oracle_stage_directory }}/dbca-{{ oracle_db.name }}.rsp -silent"
      args:
         creates: "{{ oracle_db.datafile_dest }}/{{ oracle_db.name}}"
      become: true
      become_user: "{{ oracle_user.name }}"
      tags: create_db
      register: create_db

    - name: Print output from Create database
      debug: var=create_db.stdout_lines
      become: true
      become_user: "{{ oracle_user.name }}"
      when: create_db.changed
      tags: create_db

############ Install cx_Oracle ###################

    - name: Copy cx_Oracle RPM
      copy: src=files/cx_Oracle-5.2.1-12c-py27-1.x86_64.rpm dest={{ oracle_stage_directory }}/
      become: true
      tags: cx_oracle


    - name: Install cx_Oracle
      yum: name={{ oracle_stage_directory }}/cx_Oracle-5.2.1-12c-py27-1.x86_64.rpm state=present
      become: true
      environment: "{{ oracle_env }}"
      tags: cx_oracle
